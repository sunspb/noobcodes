from PIL import Image, ImageTk
import tkinter as tk

def get_color_count(image, color):
  """
  Функция подсчитывает количество пикселей заданного цвета в изображении.

  Args:
    image: Изображение Pillow.
    color: HTML/CSS цветовой код.

  Returns:
    Количество пикселей заданного цвета.
  """

  width, height = image.size
  count = 0
  for x in range(width):
    for y in range(height):
      pixel_color = image.getpixel((x, y))
      html_color = "#{:02x}{:02x}{:02x}".format(*pixel_color)
      if html_color == color:
        count += 1
  return count


def change_color(image, old_color, new_color):
  """
  Функция меняет все пиксели изображения, соответствующие заданному цвету, на другой цвет.

  Args:
    image: Изображение Pillow.
    old_color: HTML/CSS цветовой код исходного цвета.
    new_color: HTML/CSS цветовой код нового цвета.

  Returns:
    Измененное изображение.
  """

  width, height = image.size
  for x in range(width):
    for y in range(height):
      pixel_color = image.getpixel((x, y))
      html_color = "#{:02x}{:02x}{:02x}".format(*pixel_color)
      if html_color == old_color:
        image.putpixel((x, y), new_color)
  return image


def show_image(image):
  """
  Функция отображает изображение в окне Tkinter.

  Args:
    image: Изображение Pillow.
  """

  root = tk.Tk()
  root.title("Image")

  # Преобразование изображения Pillow в формат Tkinter
  photo = ImageTk.PhotoImage(image)

  # Отображение изображения
  label = tk.Label(root, image=photo)
  label.pack()

  root.mainloop()


def main():
  """
  Главная функция.
  """

  # Получение цветового кода от пользователя
  root = tk.Tk()
  root.title("Color Picker")

  label = tk.Label(root, text="Введите цветовой код:")
  label.pack()

  entry_color = tk.Entry(root)
  entry_color.pack()

  # Функция для обработки нажатия кнопки "Выбрать файл"
  def on_select_file():
    # Открытие окна проводника для выбора файла
    filename = tk.filedialog.askopenfilename(initialdir=".", title="Select Image", filetypes=[("JPEG (*.jpg)", "*.jpg"), ("PNG (*.png)", "*.png")])

    # Обработка выбранного файла
    if filename:
      image = Image.open(filename)
      show_image(image)

  # Кнопка "Выбрать файл"
  button_select_file = tk.Button(root, text="Выбрать файл", command=on_select_file)
  button_select_file.pack()

  root.mainloop()

  # Подсчет количества пикселей заданного цвета
  color_count = get_color_count(image, entry_color.get())

  # Отображение информации о количестве пикселей
  print(f"Количество пикселей цвета {entry_color.get()} в изображении: {color_count}")

  # Замена цвета
  new_image = change_color(image, entry_color.get(), "#00FF00")

  # Отображение исходного и итогового изображения
  show_image(image)
  show_image(new_image)

  # Сохранение нового изображения
  answer = tk.messagebox.askquestion("Сохранение", "Сохранить новое изображение?")
  if answer == "yes":
    # Сохранение изображения
    new_image.save("new_image.jpg")
    print("Новое изображение успешно сохранено.")

if __name__ == "__main__":
  main()
